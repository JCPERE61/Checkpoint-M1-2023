// 6Ô∏è‚É£ ***** EJERCICIO 6 ALGORITMOS***** - ordenarRopa() 6Ô∏è‚É£
// Se desorden√≥ todo el inventario de ropa! hay prendas por todas partes.
// Por el momento tendremos que solucionar el problema creando la funci√≥n üß¶ ordenarRopa() üß¶, la cual recibir√° por par√°metros
// un array de objetos anidados, que representar√°n cada prenda. Cada objeto tendr√° dentro una propiedad nombre y un precio entero.
// Tendr√°s que implementar un algoritmo de ordenamiento para poder organizar toda la ropa de MAYOR a MENOR seg√∫n el precio.
//
//
// EJEMPLOS:
// Dado el siguiente arreglo:
// [{ nombre: 'Camiseta', precio: 12}, { nombre: 'Pantalon', precio: 2 }, { nombre: 'Saco', precio: 23 }, { nombre: 'Gorra', precio: 4 }]
//
// ordenarRopa(array) Devuelve ‚û°
// [{ nombre: 'Saco', precio: 23 }, { nombre: 'Camiseta', precio: 12 }, { nombre: 'Gorra', precio: 4 }, { nombre: 'Pantalon', precio: 2 }]
//
// REQUISITOS:
//  üü¢ Implementar alg√∫n algoritmo de ordenamiento para ordenar el arreglo de MAYOR a MENOR
//  üü¢ NO utilizar el m√©todo sort de array!

// 1.- Qu√© nos llega? Un array de objetos anidados con propiedades nombre y precio
// 2.- Qu√© se debe hacer? Ordenar el array de acuerdo al precio de mayor a menor
// 3.- C√≥mo proceder?

function ordenarRopa(ropa) {
  // Tu c√≥digo aqu√≠:
  let prices = [];
  for (let i=0;i<ropa.length;i++){
    prices.push(ropa[i].precio)
  }
  for(let i=0;i<prices.length;i++){
    let mayor = i;
    for(let j=i+1;j<prices.length;j++){
      if (prices[mayor] < prices[j]) {
        mayor = j;
      }
    }
    if (i !== mayor){
      let aux = prices[i];
      prices[i] = prices[mayor];
      prices[mayor] = aux;
    }
  }
  let ordered = [];
  for (let i=0;i<prices.length;i++) {
    let j = 0;
    while(prices[i] !==ropa[j].precio){
      j = j+1;
    }
    ordered.push(ropa[j]);
  }
  return ordered;
}

// ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
module.exports = {
  ordenarRopa
};